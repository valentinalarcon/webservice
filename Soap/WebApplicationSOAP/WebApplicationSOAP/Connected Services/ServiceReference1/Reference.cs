//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://serv", ConfigurationName="ServiceReference1.funciones")]
    public interface funciones
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.mainResponse> mainAsync(ServiceReference1.mainRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="separar_apellidosReturn")]
        System.Threading.Tasks.Task<string> separar_apellidosAsync(string Nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="separar_nombresReturn")]
        System.Threading.Tasks.Task<string> separar_nombresAsync(string Nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="dv_rutReturn")]
        System.Threading.Tasks.Task<string> dv_rutAsync(string Rut);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="validar_nombreReturn")]
        System.Threading.Tasks.Task<string> validar_nombreAsync(string Nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="digito_verificadorReturn")]
        System.Threading.Tasks.Task<string> digito_verificadorAsync(string Rut);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="main", WrapperNamespace="http://serv", IsWrapped=true)]
    public partial class mainRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://serv", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("args")]
        public string[] args;
        
        public mainRequest()
        {
        }
        
        public mainRequest(string[] args)
        {
            this.args = args;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="mainResponse", WrapperNamespace="http://serv", IsWrapped=true)]
    public partial class mainResponse
    {
        
        public mainResponse()
        {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface funcionesChannel : ServiceReference1.funciones, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class funcionesClient : System.ServiceModel.ClientBase<ServiceReference1.funciones>, ServiceReference1.funciones
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public funcionesClient() : 
                base(funcionesClient.GetDefaultBinding(), funcionesClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.funciones.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public funcionesClient(EndpointConfiguration endpointConfiguration) : 
                base(funcionesClient.GetBindingForEndpoint(endpointConfiguration), funcionesClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public funcionesClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(funcionesClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public funcionesClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(funcionesClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public funcionesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.mainResponse> ServiceReference1.funciones.mainAsync(ServiceReference1.mainRequest request)
        {
            return base.Channel.mainAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.mainResponse> mainAsync(string[] args)
        {
            ServiceReference1.mainRequest inValue = new ServiceReference1.mainRequest();
            inValue.args = args;
            return ((ServiceReference1.funciones)(this)).mainAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<string> separar_apellidosAsync(string Nombre)
        {
            return base.Channel.separar_apellidosAsync(Nombre);
        }
        
        public System.Threading.Tasks.Task<string> separar_nombresAsync(string Nombre)
        {
            return base.Channel.separar_nombresAsync(Nombre);
        }
        
        public System.Threading.Tasks.Task<string> dv_rutAsync(string Rut)
        {
            return base.Channel.dv_rutAsync(Rut);
        }
        
        public System.Threading.Tasks.Task<string> validar_nombreAsync(string Nombre)
        {
            return base.Channel.validar_nombreAsync(Nombre);
        }
        
        public System.Threading.Tasks.Task<string> digito_verificadorAsync(string Rut)
        {
            return base.Channel.digito_verificadorAsync(Rut);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.funciones))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.funciones))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8080/WebServiceProject/services/funciones");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return funcionesClient.GetBindingForEndpoint(EndpointConfiguration.funciones);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return funcionesClient.GetEndpointAddress(EndpointConfiguration.funciones);
        }
        
        public enum EndpointConfiguration
        {
            
            funciones,
        }
    }
}
